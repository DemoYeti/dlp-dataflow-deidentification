name: Load testing

on:
#  push:
#    branches:
#      - pipeline_performance
  pull_request:
    types: [ opened, reopened, synchronize ]
    branches:
      - pipeline_performance
  workflow_dispatch:

env:
  PROJECT_ID: "dlp-dataflow-deid-ci-392604"
  REGION: "us-central1"
  INSPECT_TEMPLATE: "projects/dlp-dataflow-deid-ci-392604/locations/global/inspectTemplates/dlp-demo-inspect-latest-1689137435622"
  DEID_TEMPLATE: "projects/dlp-dataflow-deid-ci-392604/locations/global/deidentifyTemplates/dlp-demo-deid-latest-1689137435622"


jobs:
  generate-uuid:
    runs-on: ubuntu-latest

    timeout-minutes: 5

    outputs:
      uuid: ${{ steps.gen-uuid.outputs.uuid }}
      job_name: ${{ steps.gen-uuid.outputs.deid_job_name }}

    steps:
      - name: Generate UUID for workflow
        id: gen-uuid
        run: |
          new_uuid=$(uuidgen)
          modified_uuid=$(echo "$new_uuid" | cut -c1-8 )
          echo "uuid=$modified_uuid" >> "$GITHUB_OUTPUT"

  pre-processing:
    needs: generate-uuid
    runs-on:
      - self-hosted
    timeout-minutes: 5
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2

      - name: Read test details
        id: set-matrix
        run: |
          matrix=$(jq -c . < .github/workflows/configs/load_tests_details.json)
          echo "matrix={\"include\":$(echo $matrix)}" >> $GITHUB_OUTPUT
          

#  run-load-tests:
#    needs:
#      - generate-uuid
#      - pre-processing
#
#    runs-on: self-hosted
#    continue-on-error: true
#    strategy:
#      max-parallel: 1
#      matrix: ${{ fromJSON(needs.pre-processing.outputs.matrix) }}
#
#    steps:
#      - name: Set job parameters
#        id: set-job-params
#        run: |
#          uuid=${{needs.generate-uuid.outputs.uuid}}
#          echo "job_name=load-test-${{needs.generate-uuid.outputs.uuid}}-test-${{matrix.name}}" >> $GITHUB_OUTPUT
#          echo "dataset=dataset_${{needs.generate-uuid.outputs.uuid}}_${{matrix.name}}" >> $GITHUB_OUTPUT
#          echo "Test details: ${{matrix.name}}"
#          echo "job_name=load-test-${{needs.generate-uuid.outputs.uuid}}-test-${{matrix.name}}"
#          echo "dataset=dataset_${{needs.generate-uuid.outputs.uuid}}_${{matrix.name}}"
#
#      - name: Submit dataflow job
#        id: submit-dataflow-job
#        uses: ./.github/workflows/submit-dataflow-job
#        with:
#          project_id: ${{env.PROJECT_ID}}
#          input_gcs_bucket: "input_dlp_load_test"
#          dataset: ${{ steps.set-job-params.outputs.dataset }}
#          inspect_template: ${{env.INSPECT_TEMPLATE}}
#          deid_template: ${{env.DEID_TEMPLATE}}
#          job_name: ${{steps.set-job-params.outputs.job_name}}
#          job_type: ${{ matrix.type }}
#
##      - name: Poll till job finishes
##        uses: ./.github/workflows/poll-job
##        with:
##          job_id: ${{steps.submit-dataflow-job.outputs.job_id}}
##          region: ${{env.REGION}}
#
#      - name: Fetch metrics
#        uses: ./.github/workflows/fetch-metrics
#        with:
#          job_id: ${{steps.submit-dataflow-job.outputs.job_id}}
#          project_id: ${{env.PROJECT_ID}}
#          test_uuid: ${{needs.generate-uuid.outputs.uuid}}
#          test_name: ${{ matrix.name }}
#
#      - name: Cleanup
#        if: always()
#        uses: ./.github/workflows/cleanup
#        with:
#          project_id: ${{env.PROJECT_ID}}
#          job_id: ${{steps.submit-dataflow-job.outputs.job_id}}
#          dataset: ${{steps.set-job-params.outputs.dataset}}

  publish-test-results:
    needs:
      - generate-uuid
      - pre-processing
#      - run-load-tests
    runs-on:
      - self-hosted
    steps:
      - uses: actions/checkout@v2

      - name: Execute publishMetrics Script
        run: |
          python3 .github/workflows/scripts/testPublishTestReport.py ${{env.PROJECT_ID}} ${{ needs.generate-uuid.outputs.uuid }}



